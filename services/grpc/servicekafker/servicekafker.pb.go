// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: servicekafker.proto

package servicekafker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestKafkaPartitionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ServiceId   string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	TopicName   string `protobuf:"bytes,3,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
}

func (x *RequestKafkaPartitionReq) Reset() {
	*x = RequestKafkaPartitionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicekafker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestKafkaPartitionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestKafkaPartitionReq) ProtoMessage() {}

func (x *RequestKafkaPartitionReq) ProtoReflect() protoreflect.Message {
	mi := &file_servicekafker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestKafkaPartitionReq.ProtoReflect.Descriptor instead.
func (*RequestKafkaPartitionReq) Descriptor() ([]byte, []int) {
	return file_servicekafker_proto_rawDescGZIP(), []int{0}
}

func (x *RequestKafkaPartitionReq) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *RequestKafkaPartitionReq) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *RequestKafkaPartitionReq) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

type RequestKafkaPartitionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartitionId int32 `protobuf:"varint,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
}

func (x *RequestKafkaPartitionRes) Reset() {
	*x = RequestKafkaPartitionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicekafker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestKafkaPartitionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestKafkaPartitionRes) ProtoMessage() {}

func (x *RequestKafkaPartitionRes) ProtoReflect() protoreflect.Message {
	mi := &file_servicekafker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestKafkaPartitionRes.ProtoReflect.Descriptor instead.
func (*RequestKafkaPartitionRes) Descriptor() ([]byte, []int) {
	return file_servicekafker_proto_rawDescGZIP(), []int{1}
}

func (x *RequestKafkaPartitionRes) GetPartitionId() int32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type ReleaseKafkaPartitionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *ReleaseKafkaPartitionReq) Reset() {
	*x = ReleaseKafkaPartitionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicekafker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseKafkaPartitionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseKafkaPartitionReq) ProtoMessage() {}

func (x *ReleaseKafkaPartitionReq) ProtoReflect() protoreflect.Message {
	mi := &file_servicekafker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseKafkaPartitionReq.ProtoReflect.Descriptor instead.
func (*ReleaseKafkaPartitionReq) Descriptor() ([]byte, []int) {
	return file_servicekafker_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseKafkaPartitionReq) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type ReleaseKafkaPartitionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReleaseKafkaPartitionRes) Reset() {
	*x = ReleaseKafkaPartitionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicekafker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseKafkaPartitionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseKafkaPartitionRes) ProtoMessage() {}

func (x *ReleaseKafkaPartitionRes) ProtoReflect() protoreflect.Message {
	mi := &file_servicekafker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseKafkaPartitionRes.ProtoReflect.Descriptor instead.
func (*ReleaseKafkaPartitionRes) Descriptor() ([]byte, []int) {
	return file_servicekafker_proto_rawDescGZIP(), []int{3}
}

func (x *ReleaseKafkaPartitionRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_servicekafker_proto protoreflect.FileDescriptor

var file_servicekafker_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6b, 0x61, 0x66, 0x6b, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6b, 0x61,
	0x66, 0x6b, 0x65, 0x72, 0x22, 0x7b, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b,
	0x61, 0x66, 0x6b, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3d, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x61, 0x66, 0x6b,
	0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x39, 0x0a, 0x18, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x61, 0x66, 0x6b, 0x61,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0xde, 0x01, 0x0a, 0x06, 0x4b, 0x61, 0x66, 0x6b, 0x65, 0x72, 0x12, 0x69, 0x0a, 0x15,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6b,
	0x61, 0x66, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x61, 0x66,
	0x6b, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6b, 0x61, 0x66, 0x6b, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6b, 0x61, 0x66, 0x6b, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6b, 0x61, 0x66, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x42, 0x10, 0x5a, 0x0e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6b, 0x61,
	0x66, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_servicekafker_proto_rawDescOnce sync.Once
	file_servicekafker_proto_rawDescData = file_servicekafker_proto_rawDesc
)

func file_servicekafker_proto_rawDescGZIP() []byte {
	file_servicekafker_proto_rawDescOnce.Do(func() {
		file_servicekafker_proto_rawDescData = protoimpl.X.CompressGZIP(file_servicekafker_proto_rawDescData)
	})
	return file_servicekafker_proto_rawDescData
}

var file_servicekafker_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_servicekafker_proto_goTypes = []any{
	(*RequestKafkaPartitionReq)(nil), // 0: servicekafker.RequestKafkaPartitionReq
	(*RequestKafkaPartitionRes)(nil), // 1: servicekafker.RequestKafkaPartitionRes
	(*ReleaseKafkaPartitionReq)(nil), // 2: servicekafker.ReleaseKafkaPartitionReq
	(*ReleaseKafkaPartitionRes)(nil), // 3: servicekafker.ReleaseKafkaPartitionRes
}
var file_servicekafker_proto_depIdxs = []int32{
	0, // 0: servicekafker.Kafker.RequestKafkaPartition:input_type -> servicekafker.RequestKafkaPartitionReq
	2, // 1: servicekafker.Kafker.ReleaseKafkaPartition:input_type -> servicekafker.ReleaseKafkaPartitionReq
	1, // 2: servicekafker.Kafker.RequestKafkaPartition:output_type -> servicekafker.RequestKafkaPartitionRes
	3, // 3: servicekafker.Kafker.ReleaseKafkaPartition:output_type -> servicekafker.ReleaseKafkaPartitionRes
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_servicekafker_proto_init() }
func file_servicekafker_proto_init() {
	if File_servicekafker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_servicekafker_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RequestKafkaPartitionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicekafker_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RequestKafkaPartitionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicekafker_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReleaseKafkaPartitionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicekafker_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ReleaseKafkaPartitionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_servicekafker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_servicekafker_proto_goTypes,
		DependencyIndexes: file_servicekafker_proto_depIdxs,
		MessageInfos:      file_servicekafker_proto_msgTypes,
	}.Build()
	File_servicekafker_proto = out.File
	file_servicekafker_proto_rawDesc = nil
	file_servicekafker_proto_goTypes = nil
	file_servicekafker_proto_depIdxs = nil
}
